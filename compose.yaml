services:
  proxy:
    image: nginx:latest
    ports:
      - "443:443"
    volumes:
      - ./docker/proxy/templates:/etc/nginx/templates:ro
    depends_on:
      - varnish
    environment:
      - SERVER_NAME=${SERVER_NAME-localhost}
      - BACKEND_UPSTREAM=varnish:80

  varnish:
    image: ${IMAGES_PREFIX:-}app-varnish
    volumes:
      - ./docker/varnish/default.vcl:/etc/varnish/default.vcl.template:ro
    depends_on:
      - router
    environment:
      - SERVER_NAME=${SERVER_NAME-localhost}
      - BACKEND_HOST=router
      - BACKEND_PORT=80
      - PHP_UPSTREAM=${PHP_UPSTREAM:-php:9000}

  router:
    image: nginx:latest
    volumes:
      - ./docker/router/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/router/templates:/etc/nginx/templates:ro
    depends_on:
      - php
    environment:
      - SERVER_NAME=${SERVER_NAME:-localhost}
      - API_UPSTREAM=${API_UPSTREAM:-php:9000}
      - PWA_UPSTREAM=${PWA_UPSTREAM:-pwa:3000}
      - EXAMPLE_UPSTREAM=${EXAMPLE_UPSTREAM:-example:3001}
  
  php:  
    image: ${IMAGES_PREFIX:-}app-php
    depends_on:
      - database
    restart: unless-stopped
    environment:
      PWA_UPSTREAM: pwa:3000
      SERVER_NAME: ${SERVER_NAME:-localhost}, php:80
      TRUSTED_PROXIES: ${TRUSTED_PROXIES:-127.0.0.0/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16}
      TRUSTED_HOSTS: ${TRUSTED_HOSTS:-^${SERVER_NAME:-example\.com|localhost}|php$$}
      DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-16}&charset=${POSTGRES_CHARSET:-utf8}

  pwa:
    image: ${IMAGES_PREFIX:-}app-pwa
    environment:
      NEXT_PUBLIC_ENTRYPOINT: http://php

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-app}
      # You should definitely change the password in production
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-!ChangeMe!}
      - POSTGRES_USER=${POSTGRES_USER:-app}
    volumes:
      - db_data:/var/lib/postgresql/data
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  db_data:
###< doctrine/doctrine-bundle ###
